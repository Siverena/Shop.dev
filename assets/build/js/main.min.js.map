{"version":3,"sources":["main.min.js"],"names":["productsDataList","document","querySelector","gets","a","window","location","search","b","Object","substring","split","i","length","c","createProductElement","productData","item","createElement","dataset","id","className","imgWrapper","classList","add","img","src","alt","name","setAttribute","btnWrapper","button","footer","link","descr","price","textContent","toFixed","href","append","appendChild","productsListParent","productsPerPage","pathname","onAddToCartClick","evt","preventDefault","inputs","target","parentNode","querySelectorAll","cartObj","currentProduct","color","size","quantity","forEach","input","lastChild","data","cartDataList","Array","localStorage","cart","JSON","parse","push","stringify","setCartCounter","addToCart","parent","limit","page","startNumber","endNumber","product","renderProductsList","addBtn","addEventListener","productItem","sliderEl","innerHTML","image","slide","imageEl","width","height","productCard","category","fillProductPage","slider","console","log","items","btnPrew","contains","remove","nextSlide","prevSlide","cartCounter","clearCartButton","cartList","subTotal","grandTotal","calcTotal","cartItems","total","createCartItem","cin","itemData","find","prod","cartElem","description","itemName","innerText","priceValue","colorValue","sizeValue","quantityLabel","htmlFor","quantityInput","type","value","removeBtn","removeBtnText","onCartChange","changed","match","parseInt","currentTarget","fillCartList","firstElementChild","removeChild","insertedElem","insertBefore","onRemoveButtonClick","discount","updateTotals","splice","removeItemFromCart","onClearCartButtonClick","clear","onclose"],"mappings":"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","file":"main.min.js","sourcesContent":["import { productsDataList } from './modules/productsdata.min.js';\r\n//*************   product.js *******/\r\n(function() {\r\n    if (!document.querySelector('.products__wrap')) {\r\n        return;\r\n    }\r\n\r\n    let getRandomElem = (arr) => {\r\n            return arr[Math.floor(Math.random() * arr.length)]\r\n        }\r\n        /**\r\n         * Переводит GET-параметры страницы объект. \r\n         * @returns {Object} - объект с названиями параметров в ключах и значениями\r\n         */\r\n    let gets = (() => {\r\n        let a = window.location.search;\r\n        if (!a) {\r\n            return;\r\n        }\r\n        let b = new Object();\r\n        a = a.substring(1).split(\"&\");\r\n        for (let i = 0; i < a.length; i++) {\r\n            let c = a[i].split(\"=\");\r\n            b[c[0]] = c[1];\r\n        }\r\n        return b;\r\n    })();\r\n    //для фильтров, но пока не реализовано\r\n    // let sizeList = ['xs', 's', 'm', 'l', 'xl'];\r\n    // let colorList = ['white', 'black', 'blue', 'red', 'green'];\r\n    /**\r\n     * Создает элемент разметки одного товара\r\n     * @param {*} productData - объект с данными продукта\r\n     * @returns {HTMLElement} Элемент разметки\r\n     */\r\n    let createProductElement = (productData) => {\r\n            let item = document.createElement('li');\r\n            item.dataset.id = productData.id;\r\n            item.className = 'products__item  product';\r\n            let imgWrapper = document.createElement('div');\r\n            imgWrapper.classList.add('product__image-wrap');\r\n            let img = document.createElement('img');\r\n            img.src = `./img/product/${productData.img[0]}`;\r\n            img.alt = productData.name;\r\n            img.setAttribute('width', '360');\r\n            img.setAttribute('height', '420');\r\n            let btnWrapper = document.createElement('div');\r\n            btnWrapper.classList.add('product__add-to-box-wrap');\r\n            let button = document.createElement('button');\r\n            button.classList.add('product__add-to-box-btn');\r\n            let footer = document.createElement('footer');\r\n            footer.classList.add('product__footer');\r\n            let link = document.createElement('a');\r\n            link.classList.add('product__link');\r\n            let name = document.createElement('h3');\r\n            name.classList.add('product__name');\r\n            let descr = document.createElement('p');\r\n            descr.classList.add('product__description');\r\n            let price = document.createElement('p');\r\n            price.classList.add('product__price');\r\n            name.textContent = productData.name;\r\n            descr.textContent = productData.descr;\r\n            price.textContent = `$${productData.price.toFixed(2)}`;\r\n            link.href = `product-page.html?id=${productData.id}`;\r\n            link.append(name, descr, price);\r\n            footer.append(link);\r\n            button.textContent = 'Add to Cart';\r\n            btnWrapper.appendChild(button);\r\n            imgWrapper.append(img, btnWrapper);\r\n            item.append(imgWrapper, footer);\r\n            return item;\r\n        }\r\n        /** Заполнить карточку товара на странице товара\r\n         * @param {} productItem - продукт, пока выводится первый элемент вместо 404, если нет гет-параметра id\r\n         */\r\n    let fillProductPage = (productItem = productsDataList[0]) => {\r\n            if (window.location.pathname !== \"/product-page.html\") {\r\n                return;\r\n            }\r\n            let sliderEl = document.querySelector('.slider__item__cont');\r\n            sliderEl.innerHTML = \"\";\r\n            productItem.img.forEach((image, i) => {\r\n                let slide = document.createElement('div');\r\n                slide.classList.add('slider__item');\r\n                if (i === 0) {\r\n                    slide.classList.add('slider__item--active');\r\n                }\r\n                let imageEl = document.createElement('img');\r\n                imageEl.src = `img/product/${image}`;\r\n                imageEl.className = \"slider__image\";\r\n                imageEl.width = 597;\r\n                imageEl.height = 724;\r\n                imageEl.alt = productItem.name;\r\n                slide.append(imageEl);\r\n                sliderEl.append(slide);\r\n            })\r\n\r\n            let productCard = document.querySelector('.item__description');\r\n            productCard.dataset.id = productItem.id;\r\n            productCard.querySelector('.item__category').textContent = productItem.category;\r\n            productCard.querySelector('.item__name').textContent = productItem.name;\r\n            productCard.querySelector('.item__text').textContent = productItem.descr;\r\n            productCard.querySelector('.item__cost').textContent = '$' + productItem.price;\r\n        }\r\n        /** Отрисовка списка продуктов\r\n         * @param productsDataList - массив данных продуктов\r\n         * @param {HTMLElement} parent - родительский узел, в котором будем отрисовывать\r\n         * @param {int} limit - количество элементов на страницу пагинации\r\n         * @param {int} page - текущая страница\r\n         */\r\n    let renderProductsList = (productsDataList, parent, limit = 0, page = 0) => {\r\n        let startNumber = 0;\r\n        let endNumber = limit;\r\n        if (limit === 0) {\r\n            productsDataList.forEach((product) => {\r\n                parent.appendChild(createProductElement(product));\r\n            });\r\n        } else {\r\n            if (page > 0) {\r\n                startNumber = limit * (page - 1);\r\n                endNumber = limit * page;\r\n            }\r\n            if (productsDataList.length < limit) {\r\n                limit = productsDataList.length;\r\n            }\r\n            for (let i = startNumber; i < endNumber; i++) {\r\n                parent.appendChild(createProductElement(productsDataList[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    //где будет отрисовка продуктов\r\n    let productsListParent = document.querySelector('.products__wrap');\r\n\r\n    let productsPerPage = 0;\r\n    //определяем, где мы\r\n    switch (window.location.pathname) {\r\n        case \"/index.html\":\r\n            productsPerPage = 6;\r\n            break;\r\n        case \"/catalog-page.html\":\r\n            productsPerPage = 9;\r\n            break;\r\n        case \"/product-page.html\":\r\n            productsPerPage = 3;\r\n            break;\r\n        default:\r\n            productsPerPage = 0;\r\n    }\r\n    // сбрасываем пагинацию на 0\r\n    let currentPage = 0;\r\n\r\n    /**\r\n     * Добавляет в localStorage.cart  товар и вызывает обновление счетчика\r\n     * @param {*} cartObj - объект корзины, {id,color,size,quantity}\r\n     */\r\n    let addToCart = (cartObj) => {\r\n        let cartDataList = Array();\r\n        if (localStorage.cart) {\r\n            cartDataList = JSON.parse(localStorage.cart);\r\n        }\r\n        cartDataList.push(cartObj);\r\n        localStorage.cart = JSON.stringify(cartDataList);\r\n        setCartCounter();\r\n    }\r\n\r\n    /**\r\n     * Обработчик нажатия на кнопку добавить в корзину, вызывает addToCart()\r\n     * @param {Event} evt \r\n     */\r\n    let onAddToCartClick = (evt) => {\r\n        evt.preventDefault();\r\n        let inputs = evt.target.parentNode.querySelectorAll('input:checked');\r\n        let cartObj = {\r\n            id: currentProduct.id,\r\n            color: 'black',\r\n            size: 'm',\r\n            price: currentProduct.price,\r\n            quantity: 1\r\n        };\r\n        inputs.forEach(input => {\r\n            if (input.name === \"color\") { cartObj.color = input.id; }\r\n            if (input.name === \"size\") { cartObj.size = input.id; }\r\n            if (input.name === \"quantity\") { cartObj.quantity = +input.parentNode.lastChild.data; }\r\n        });\r\n        addToCart(cartObj);\r\n    }\r\n    renderProductsList(productsDataList, productsListParent, productsPerPage, currentPage);\r\n    document.querySelectorAll('.item__add-to-box-btn').forEach(\r\n        (addBtn) => {\r\n            addBtn.addEventListener('click', onAddToCartClick);\r\n        }\r\n    );\r\n    let currentProduct = productsDataList[0];\r\n    if (gets && gets['id']) { currentProduct = productsDataList[gets['id']]; }\r\n    fillProductPage(currentProduct);\r\n})();\r\n//*************   end of product.js *******/\r\n(function() {\r\n    function nextSlide(items) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].classList.contains('slider__item--active')) {\r\n                items[i].classList.remove('slider__item--active');\r\n                if (i == items.length - 1) {\r\n                    items[0].classList.add('slider__item--active');\r\n                } else {\r\n                    items[i + 1].classList.add('slider__item--active');\r\n                }\r\n                i = items.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    function prevSlide(items) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].classList.contains('slider__item--active')) {\r\n                items[i].classList.remove('slider__item--active');\r\n                if (i == 0) {\r\n                    items[items.length - 1].classList.add('slider__item--active');\r\n                } else {\r\n                    items[i - 1].classList.add('slider__item--active');\r\n                }\r\n                i = items.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    let slider = document.querySelector(\".slider\");\r\n    console.log(slider);\r\n    if (slider) {\r\n        let items = slider.querySelectorAll(\".slider__item\");\r\n        let btnPrew = slider.querySelector(\".slider__link--prew\");\r\n        let btnNext = slider.querySelector(\".slider__link--next\");\r\n\r\n        btnNext.addEventListener('click', () => { nextSlide(items) });\r\n        btnPrew.addEventListener('click', () => { prevSlide(items) });\r\n    }\r\n})();\r\n//*************   cart.js *******/\r\n\r\n/** \r\n * Устанавливает счетчик на иконке корзины в хэдере\r\n */\r\nlet setCartCounter = () => {\r\n        let cartCounter = document.querySelector('.cart-link__count');\r\n        if (localStorage.cart) {\r\n            cartCounter.textContent = JSON.parse(localStorage.cart).length;\r\n            cartCounter.classList.remove('visually-hidden');\r\n        } else {\r\n            cartCounter.textContent = \"\";\r\n            cartCounter.classList.add('visually-hidden');\r\n        }\r\n    }\r\n    (function() {\r\n        let clearCartButton;\r\n        let cartList;\r\n        let subTotal;\r\n        let grandTotal;\r\n        if (document.querySelector('#clear-cart-btn')) {\r\n            clearCartButton = document.querySelector('#clear-cart-btn');\r\n        }\r\n        if (document.querySelector('.cart')) {\r\n            cartList = document.querySelector('.cart');\r\n        }\r\n        /**\r\n         * Считает итоговую сумму в корзине\r\n         * @returns {float} сумма\r\n         */\r\n        let calcTotal = () => {\r\n                let cartItems;\r\n                if (!localStorage.cart) {\r\n                    return 0;\r\n                }\r\n                let total = 0\r\n                cartItems = JSON.parse(localStorage.cart);\r\n                cartItems.forEach(item => {\r\n                    total += item.price * item.quantity;\r\n                })\r\n                return total;\r\n            }\r\n            /**\r\n             * Обновляет значения sub total и grand total в корзине\r\n             * @param {int} discount - скидка в процентах, по умолчанию 0\r\n             */\r\n        let updateTotals = (discount = 0) => {\r\n                let total = calcTotal();\r\n                subTotal.textContent = `$${total}`;\r\n                grandTotal.textContent = `$${(total * (1 - discount / 100)).toFixed(2)}`;\r\n            }\r\n            /**\r\n             * Создать элемент корзины\r\n             * @param {} item - элемент корзины\r\n             * @param {} cin - порядковый номер элемента корзине\r\n             * @returns {HTMLElement} - разметка элемента корзины\r\n             */\r\n        let createCartItem = (item, cin) => {\r\n                let itemData = productsDataList.find(prod => prod.id === item.id);\r\n                let cartElem = document.createElement('li');\r\n                cartElem.dataset.id = item.id;\r\n                cartElem.className = 'cart__item goods';\r\n                let img = document.createElement('img');\r\n                img.src = `img/product/${itemData.img[0]}`;\r\n                img.alt = itemData.name;\r\n                img.setAttribute('width', '262');\r\n                img.setAttribute('height', '306');\r\n                img.className = 'goods__img';\r\n                let description = document.createElement('div');\r\n                description.className = 'goods__description';\r\n                let itemName = document.createElement('a');\r\n                itemName.className = 'goods__name';\r\n                itemName.href = `product-page.html?id=${item.id}`;\r\n                itemName.innerHTML = itemData.name;\r\n                let price = document.createElement('p');\r\n                price.className = 'goods__text goods__text--price';\r\n                price.innerText = 'Price: ';\r\n                let priceValue = document.createElement('span');\r\n                priceValue.innerText = `$${itemData.price}`;\r\n                price.append(priceValue);\r\n                let color = document.createElement('p');\r\n                color.className = 'goods__text';\r\n                color.innerText = 'Color: ';\r\n                let colorValue = document.createElement('span');\r\n                colorValue.innerText = item.color;\r\n                color.append(colorValue);\r\n                let size = document.createElement('p');\r\n                size.className = 'goods__text';\r\n                size.innerText = 'Size: ';\r\n                let sizeValue = document.createElement('span');\r\n                sizeValue.innerText = item.size;\r\n                size.append(sizeValue);\r\n                let quantity = document.createElement('div');\r\n                quantity.className = 'goods__input-wrap';\r\n                let quantityLabel = document.createElement('label');\r\n                quantityLabel.className = 'goods__quantity';\r\n                quantityLabel.htmlFor = `quantity${cin}`;\r\n                quantityLabel.innerText = 'Quantity:';\r\n                let quantityInput = document.createElement('input');\r\n                quantityInput.id = `quantity${cin}`;\r\n                quantityInput.name = `quantity${cin}`;\r\n                quantityInput.type = 'number';\r\n                quantityInput.value = item.quantity;\r\n                quantity.append(quantityLabel, quantityInput);\r\n                let removeBtn = document.createElement('button');\r\n                removeBtn.className = 'goods__delete';\r\n                let removeBtnText = document.createElement('span');\r\n                removeBtnText.className = 'visually-hidden';\r\n                removeBtnText.innerText = 'Удалить';\r\n                removeBtn.append(removeBtnText);\r\n                description.append(itemName, price, color, size, quantity, removeBtn);\r\n                cartElem.append(img, description);\r\n                return cartElem; // через clonenode было бы короче...\r\n            }\r\n            /**\r\n             * Обработчик события изменения товара в корзине\r\n             * @param {Event} evt \r\n             */\r\n        let onCartChange = (evt) => {\r\n                let changed = { id: evt.target.id, value: evt.target.value };\r\n                if (changed.id.match(/quantity/i)) {\r\n                    changed.type = 'quantity';\r\n                    changed.value = parseInt(changed.value);\r\n                }\r\n                //тут аналогично дописать для изменений цвета и размера\r\n                let cartDataList = JSON.parse(localStorage.cart);\r\n                cartDataList[evt.currentTarget.dataset.cin][changed.type] = changed.value;\r\n                localStorage.cart = JSON.stringify(cartDataList);\r\n                fillCartList(cartDataList, cartList);\r\n            }\r\n            /**\r\n             * Отрисовыввает элементы корзины\r\n             * @param {} items коллекция товаров в корзине\r\n             * @param {HTMLElement} parent родительский элемент, в который будем вставлять \r\n             */\r\n        let fillCartList = (items, parent) => {\r\n                while (parent.firstElementChild && !parent.firstElementChild.classList.contains('cart__button-wrap')) {\r\n                    parent.removeChild(parent.firstElementChild);\r\n                }\r\n                for (let i = 0; i < items.length; i++) {\r\n                    let insertedElem = parent.insertBefore(createCartItem(items[i], i), parent.querySelector('.cart__button-wrap'));\r\n                    insertedElem.dataset.cin = i;\r\n                    insertedElem.addEventListener('click', onRemoveButtonClick);\r\n                    insertedElem.addEventListener('change', onCartChange);\r\n                }\r\n                setCartCounter();\r\n                updateTotals();\r\n            }\r\n            /**\r\n             * Удалить товар из корзины\r\n             * @param {int} i \r\n             */\r\n        let removeItemFromCart = (i) => {\r\n                let cartDataList = JSON.parse(localStorage.cart);\r\n                cartDataList.splice(i, 1);\r\n                localStorage.cart = JSON.stringify(cartDataList);\r\n                fillCartList(cartDataList, cartList);\r\n            }\r\n            /**\r\n             * Обработчик клика на удаление товара\r\n             * @param {Event} evt \r\n             */\r\n        let onRemoveButtonClick = (evt) => {\r\n                if (evt.target.classList.contains('goods__delete')) {\r\n                    evt.preventDefault();\r\n                    removeItemFromCart(evt.currentTarget.dataset.cin);\r\n                }\r\n\r\n            }\r\n            /**\r\n             * Очистить корзину\r\n             */\r\n        let clearCart = () => {\r\n                localStorage.clear();\r\n                fillCartList('', cartList, 0);\r\n            }\r\n            /**\r\n             * Обработчик клика на кнопку очистки\r\n             * @param {Event} evt \r\n             */\r\n        let onClearCartButtonClick = (evt) => {\r\n            evt.preventDefault();\r\n            clearCart();\r\n        }\r\n\r\n        /**************** Вешаем обработчики, если страница корзины ************************/\r\n\r\n        if (window.location.pathname === '/cart-page.html') {\r\n            let cartList = document.querySelector('.cart');\r\n            subTotal = document.querySelector(\".checkout__grand span\");\r\n            grandTotal = document.querySelector(\".checkout__sub span\");\r\n            if (localStorage.cart) {\r\n                fillCartList(JSON.parse(localStorage.cart), cartList);\r\n            } else {\r\n                fillCartList(\"\", cartList);\r\n            }\r\n            calcTotal();\r\n        } else {\r\n            setCartCounter();\r\n        }\r\n        if (clearCartButton) {\r\n            clearCartButton.addEventListener('click', onClearCartButtonClick);\r\n        }\r\n\r\n        /*************************Очистить локальное хранилище при закрытии окна ******************* */\r\n        window.onclose = () => {\r\n            localStorage.clear();\r\n        }\r\n    })();\r\n//*************   cart.js *******/"]}